# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Book {
  id: String!
  name: String!
  price: Float!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  addUser(input: userInput!): User!
  checkout: String!
  createCustomer(email: String!, name: String!): String!
  createPrice(input: priceInput!): String!
  createProduct(name: String!): String!
  createSubscription(input: subscriptionInput!): subscription!
  initializePayment(input: PaymentIntentInput!): String!
  login(input: LoginInput!): String!
  registerUser(input: userInput!): User!
  updateUser(input: userInput!): String!
}

input PaymentIntentInput {
  amount: Float!
  currency: String!
}

type Post {
  authorId: Float!
  content: String!
  createdAt: DateTime!
  id: Float!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
}

type Price {
  currency: String!
  id: String!
  interval: String!
  type: String!
  unit_amount: Float!
  unit_amount_decimal: String!
}

type Product {
  description: String!
  id: String!
  name: String!
  prices: [Price!]!
}

type ProductResponse {
  products: [Product!]!
  total: Float!
}

type Query {
  getUsers: UserResponse!
  hello(id: String!, name: String!, price: Float!): Book!
  retriveProducts: ProductResponse!
}

enum ROLE {
  ACCOUNT
  ADMIN
  SUPER_ADMIN
  USER
}

type User {
  email: String!
  id: Float!
  name: String!
  posts: [Post!]
  role: ROLE!
}

type UserResponse {
  total: Float!
  users: [User!]!
}

input priceInput {
  amount: Float!
  currency: String!
  interval: String!
  productId: String!
}

type subscription {
  clientSecret: String!
  subscriptionId: String!
}

input subscriptionInput {
  customerId: String!
  priceId: String!
}

input userInput {
  customerId: String
  email: String!
  id: Float
  name: String!
  password: String
  role: ROLE
}
